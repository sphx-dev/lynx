name: Build and Push Multi-Arch Docker Image
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: blacksmith-2vcpu-ubuntu-2204
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Extract branch name
      shell: bash
      run: |
        branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
        branch_slug_slash=$(echo "${branch//\//-}")
        branch_slug=$(echo "${branch_slug_slash//./-}")
        echo "branch=${branch_slug}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Extract git short sha
      shell: bash
      run: echo "short_sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
      id: extract_short_sha
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: "${{ github.run_id }}-${{ github.run_attempt }}"
        role-duration-seconds: 1200
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'
    - name: Build and push
      uses: docker/build-push-action@v5
      env:
        DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        SERVICE_NAME: sphx/lynx
        TAG: ${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_short_sha.outputs.short_sha }}
        CACHE_TAG: buildcache-${{ steps.extract_branch.outputs.branch }}
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.TAG }}
          ${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:latest
        cache-to: mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.CACHE_TAG }}
        cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.CACHE_TAG }},mode=max